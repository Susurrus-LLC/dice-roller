{"version":3,"sources":["components/Header/Header.module.sass","redux/reducers.ts","redux/actions.ts","redux/store.ts","serviceWorker.ts","components/Footer/index.tsx","components/Header/index.tsx","App.tsx","index.tsx","components/Footer/Footer.module.sass"],"names":["module","exports","diceApp","combineReducers","options","state","action","type","number","sides","modifier","result","store","createStore","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","Footer","appGhURL","className","styles","footer","copyright","href","target","rel","current","Date","getFullYear","toString","years","Header","header","App","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ef084b5e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3PqHd\"};","import { combineReducers } from 'redux'\r\n\r\nimport { ActionTypes, Options, Result } from './types'\r\nimport { SET_OPTIONS, SET_RESULT } from './actions'\r\n\r\nconst options = (state: Options[] = [], action: ActionTypes) => {\r\n  switch (action.type) {\r\n    case SET_OPTIONS:\r\n      return [\r\n        ...state,\r\n        {\r\n          number: action.options.number,\r\n          type: action.options.type,\r\n          sides: action.options.sides,\r\n          modifier: action.options.modifier\r\n        }\r\n      ]\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst result = (state: Result[] = [], action: ActionTypes) => {\r\n  switch (action.type) {\r\n    case SET_RESULT:\r\n      return [\r\n        ...state,\r\n        {\r\n          result: action.result\r\n        }\r\n      ]\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst diceApp = combineReducers({\r\n  options,\r\n  result\r\n})\r\n\r\nexport default diceApp\r\n","import { Options } from './types'\r\n\r\n// action types\r\n\r\nexport const SET_OPTIONS = 'SET_OPTIONS'\r\nexport const SET_RESULT = 'SET_RESULT'\r\n\r\n// action creators\r\n\r\nexport const setOptions = (options: Options) => (\r\n  {\r\n    type: SET_OPTIONS,\r\n    options\r\n  }\r\n)\r\n\r\nexport const setResult = (result: number) => (\r\n  {\r\n    type: SET_RESULT,\r\n    result\r\n  }\r\n)\r\n","import { createStore } from 'redux'\r\nimport diceApp from './reducers'\r\n\r\nconst store = createStore(diceApp)\r\n\r\nexport default store\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register (config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\r\n\r\nimport styles from './Footer.module.sass'\r\n\r\nconst Footer: React.FC = () => {\r\n  const years = (): string => {\r\n    const start = 2019\r\n    const current = new Date().getFullYear()\r\n    return current > start ? `${start}–${current}` : start.toString()\r\n  }\r\n\r\n  const author = 'Ian A. Cook'\r\n  const authorURL = 'https://github.com/nai888/'\r\n  const appGhURL = 'https://github.com/nai888/dice-roller/'\r\n  const version = '0.1.0'\r\n\r\n  return (\r\n    <footer className={styles.footer}>\r\n      <p className={styles.copyright}>\r\n        <i className='fas fa-code' />{' '}\r\n        <a\r\n          href={appGhURL + 'blob/master/CHANGELOG.md'}\r\n          target='_blank'\r\n          rel='noopener noreferrer'\r\n        >\r\n          Version {version}\r\n        </a>\r\n        . Built by <i className='fas fa-wrench' />{' '}\r\n        <a href={authorURL} target='_blank' rel='noopener noreferrer'>\r\n          {author}\r\n        </a>\r\n        , copyright &copy; {years()} under the <i className='fas fa-gavel' />{' '}\r\n        <a\r\n          href={appGhURL + 'blob/master/LICENSE'}\r\n          target='_blank'\r\n          rel='noopener noreferrer'\r\n        >\r\n          AGPL-3.0\r\n        </a>{' '}\r\n        license. View this project <i className='fab fa-github' />{' '}\r\n        <a href={appGhURL} target='_blank' rel='noopener noreferrer'>\r\n          on GitHub\r\n        </a>\r\n        .\r\n      </p>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nimport styles from './Header.module.sass'\r\n\r\nconst Header: React.FC = () => (\r\n  <header className={styles.header}>\r\n    <h1 className='title'>Dice Roller</h1>\r\n  </header>\r\n)\r\n\r\nexport default Header\r\n","import React from 'react'\n\nimport Footer from './components/Footer'\nimport Header from './components/Header'\n\nimport './App.module.sass'\n\nconst App: React.FC = () => (\n  <>\n    <Header />\n    <main>\n      <p>Dice roller&hellip;</p>\n    </main>\n    <Footer />\n  </>\n)\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\n\nimport store from './redux/store'\n\nimport * as serviceWorker from './serviceWorker'\nimport App from './App'\nimport './global.sass'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\nserviceWorker.register()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__2wW0P\"};"],"sourceRoot":""}